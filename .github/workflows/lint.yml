name: Linting
on:
  pull_request:
    branches:
      - master

jobs:
  check-format:
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Get Fetch Depth
        id: get-depth
        shell: pwsh
        run: |
          $payload = gc "$env:GITHUB_EVENT_PATH" | ConvertFrom-Json
          $commitEndpoint=$($payload.pull_request._links.commits.href)
          echo "$commitEndpoint"
          $commits = Invoke-WebRequest -Uri "$commitEndpoint" | ConvertFrom-Json
          echo "::set-output name=fetch-depth::$($commits.count)"
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
         fetch-depth: ${{ steps.get-depth.outputs.fetch-depth }}

      - name: Install black
        run: pip install black

      - name: Get files
        id: files-changes-in-pr
        env:
          depth: ${{ steps.get-depth.outputs.fetch-depth }}
        shell: powershell
        run: |
          bash -c "git diff --name-only HEAD~$($depth) HEAD>/d/changes.txt"

      - name: Run Black on top of latest commit
        shell: bash
        run: |
          printf "Checking Files"
          printf $(</d/changes.txt)
          printf "\n"
          content=$(</d/changes.txt)
          while read file
          do
            if [[ ($(python -c "print('${file}'[-3:])") == ".py") && (-f ${file}) ]]
            then
              black --diff $file
            fi
          done </d/changes.txt
          while read file
          do
            if [[ ($(python -c "print('${file}'[-3:])") == ".py") && (-f ${file}) ]]
            then
              black $file
            fi
          done </d/changes.txt

      - name: Check File and Report the Files Not formatted
        shell: powershell
        run: |
          if ( $(bash -c "git diff --name-only") -eq "" -or $(bash -c "git diff --name-only") -eq $null ){
            echo 'All files Changed are formatted Correctly'
          } else {
            echo 'These files need formatting.'
            echo "The Filed changed are `n`n $(git ls-files -m)"
            exit 1
          }
  flake-checks:
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run Flake8
        run: |
          poetry run flake8 manim

  isort-checks:
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install isort

      - name: Run Isort
        run: |
          isort -c .
