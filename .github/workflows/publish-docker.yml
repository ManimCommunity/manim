name: Publish Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [released]

jobs:
  docker-latest:
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64,linux/amd64
          push: true
          file: docker/Dockerfile
          tags: |
            manimcommunity/manim:latest

  docker-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: create_release
        shell: python
        env:
          tag_act: ${{ github.ref }}
        run: |
          import os
          ref_tag = os.getenv('tag_act').split('/')[-1]
          with open(os.getenv('GITHUB_OUTPUT'), 'w') as f:
            print(f"tag_name={ref_tag}", file=f)

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64,linux/amd64
          push: true
          file: docker/Dockerfile
          tags: |
            manimcommunity/manim:stable
            manimcommunity/manim:latest
            manimcommunity/manim:${{ steps.create_release.outputs.tag_name }}
