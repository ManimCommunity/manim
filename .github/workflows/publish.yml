name: Publish Docker Image

on:
  release:
    types: [released]

jobs:
  docker-arm64:
    runs-on: [self-hosted, linux, ARM64, docker-installed]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Upload URL
        id: create_release
        shell: python
        env:
          tag_act: ${{ github.ref }}
        run: |
          import os
          ref_tag = os.getenv('tag_act').split('/')[-1]
          print(f"::set-output name=tag_name::{ref_tag[1:]}")

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/Dockerfile
          tags: |
            manimcommunity/manim:stable
            manimcommunity/manim:latest
            manimcommunity/manim:v${{ steps.create_release.outputs.tag_name }}

  docker-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Tag
        id: create_release
        shell: python
        env:
          tag_act: ${{ github.ref }}
        run: |
          import os
          ref_tag = os.getenv('tag_act').split('/')[-1]
          print(f"::set-output name=tag_name::{ref_tag[1:]}")

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/Dockerfile
          tags: |
            manimcommunity/manim:stable
            manimcommunity/manim:latest
            manimcommunity/manim:v${{ steps.create_release.outputs.tag_name }}
