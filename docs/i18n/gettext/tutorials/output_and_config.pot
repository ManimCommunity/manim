
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/tutorials/output_and_config.rst:2
msgid "Manim's Output Settings"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:4
msgid "This document will focus on understanding manim's output files and some of the main command-line flags available."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:7
msgid "This tutorial picks up where :doc:`quickstart` left off, so please read that document before starting this one."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:11
msgid "Manim output folders"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:13
msgid "At this point, you have just executed the following command."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:19
msgid "Let's dissect what just happened step by step.  First, this command executes manim on the file ``scene.py``, which contains our animation code.  Further, this command tells manim exactly which ``Scene`` is to be rendered, in this case, it is ``SquareToCircle``.  This is necessary because a single scene file may contain more than one scene.  Next, the flag `-p` tells manim to play the scene once it's rendered, and the `-ql` flag tells manim to render the scene in low quality."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:27
msgid "After the video is rendered, you will see that manim has generated some new files and the project folder will look as follows."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:44
msgid "There are quite a few new files.  The main output is in ``media/videos/scene/480p15/SquareToCircle.mp4``.  By default, the ``media`` folder will contain all of manim's output files.  The ``media/videos`` subfolder contains the rendered videos.  Inside of it, you will find one folder for each different video quality.  In our case, since we used the ``-l`` flag, the video was generated at 480 resolution at 15 frames per second from the ``scene.py`` file.  Therefore, the output can be found inside ``media/videos/scene/480p15``.  The additional folders ``media/videos/scene/480p15/partial_movie_files`` as well as ``media/text`` and ``media/Tex`` contain files that are used by manim internally."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:55
msgid "You can see how manim makes use of the generated folder structure by executing the following command,"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:62
msgid "The ``-ql`` flag (for low quality) has been replaced by the ``-qh`` flag, for high quality.  Manim will take considerably longer to render this file, and it will play it once it's done since we are using the ``-p`` flag.  The output should look like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:84
msgid "And the folder structure should look as follows."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:102
msgid "Manim has created a new folder ``media/videos/1080p60``, which corresponds to the high resolution and the 60 frames per second.  Inside of it, you can find the new ``SquareToCircle.mp4``, as well as the corresponding ``partial_movie_files``."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:107
msgid "When working on a project with multiple scenes, and trying out multiple resolutions, the structure of the output directories will keep all your videos organized."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:111
msgid "Further, manim has the option to output the last frame of a scene, when adding the flag ``-s``. This is the fastest option to quickly get a preview of a scene. The corresponding folder structure looks like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:134
msgid "Saving the last frame with ``-s`` can be combined with the flags for different resolutions, e.g. ``-s -ql``, ``-s -qh``"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:141
msgid "Sections"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:143
msgid "In addition to the movie output file one can use sections. Each section produces its own output video. The cuts between two sections can be set like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:157
msgid "All the animations between two of these cuts get concatenated into a single output video file. Be aware that you need at least one animation in each section. For example this wouldn't create an output video:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:171
msgid "One way of fixing this is to wait a little:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:182
msgid "For videos to be created for each section you have to add the ``--save_sections`` flag to the Manim call like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:188
msgid "If you do this, the ``media`` folder will look like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:214
msgid "As you can see each section receives their own output video in the ``sections`` directory. The JSON file in here contains some useful information for each section:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:255
msgid "This data can be used by third party applications, like a presentation system or automated video editing tool."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:257
msgid "You can also skip rendering all animations belonging to a section like this:"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:271
msgid "Some command line flags"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:273
msgid "When executing the command"
msgstr ""

#: ../../source/tutorials/output_and_config.rst:279
msgid "it was necessary to specify which ``Scene`` class to render.  This is because a single file can contain more than one ``Scene`` class.  If your file contains multiple ``Scene`` classes, and you want to render them all, you can use the ``-a`` flag."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:284
msgid "As discussed previously, the ``-ql`` specifies low render quality.  This does not look very good, but is very useful for rapid prototyping and testing.  The other options that specify render quality are ``-qm``, ``-qh``, and ``-qk`` for medium, high, and 4k quality, respectively."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:289
msgid "The ``-p`` flag plays the animation once it is rendered.  If you want to open the file browser at the location of the animation instead of playing it, you can use the ``-f`` flag.  You can also omit these two flags."
msgstr ""

#: ../../source/tutorials/output_and_config.rst:293
msgid "Finally, by default manim will output .mp4 files.  If you want your animations in .gif format instead, use the ``-i`` flag.  The output files will be in the same folder as the .mp4 files, and with the same name, but a different file extension."
msgstr ""


