
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/installation/troubleshooting.rst:2
msgid "Troubleshooting"
msgstr ""

#: ../../source/installation/troubleshooting.rst:5
msgid "Version incompatibility"
msgstr ""

#: ../../source/installation/troubleshooting.rst:7
msgid "Confusion and conflict between versions is by far the most common reason for installation failures. Some signs and errors resulting from this are as follows:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:11
msgid "``There are no scenes in that module``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:12
msgid "``ModuleNotFoundError: No module named 'manim'``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:13
msgid "``ModuleNotFoundError: No module named 'manimlib'``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:14
msgid "You followed any tutorial created before October 2020 (because the community edition did not exist before then)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:15
msgid "You cloned a repository on GitHub (installation of the community version for normal use does not require the cloning of any repository)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:16
msgid "Different import statements (explained below)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:17
msgid "You used documentation for multiple versions (such as the readme for 3b1b/manim and this documentation)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:20
msgid "As this is the documentation for the community version, we can only help with the installation of this library. If you would like to install other versions of manim, please refer to their documentation."
msgstr ""

#: ../../source/installation/troubleshooting.rst:25
msgid "Identifying files written for a different version of manim"
msgstr ""

#: ../../source/installation/troubleshooting.rst:27
msgid "There are some distinctive features of different versions of manim that can help in identifying what version of manim files are written for:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:31
msgid "Feature"
msgstr ""

#: ../../source/installation/troubleshooting.rst:31
msgid "ManimCE (this version)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:31
msgid "ManimGL"
msgstr ""

#: ../../source/installation/troubleshooting.rst:31
msgid "ManimCairo"
msgstr ""

#: ../../source/installation/troubleshooting.rst:33
msgid "Import statement"
msgstr ""

#: ../../source/installation/troubleshooting.rst:33
msgid "``from manim import *``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:33
msgid "``from manimlib import *``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:33
msgid "``from manimlib.imports import *``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:37
msgid "If you are a beginner, you should only attempt to run files written for your version. Files written for a different version of manim will generally not work without some modification."
msgstr ""

#: ../../source/installation/troubleshooting.rst:42
msgid "Identifying the version you are running"
msgstr ""

#: ../../source/installation/troubleshooting.rst:44
msgid "The community edition of manim should always state `Manim Community <version_number>` as its first line of any command you run."
msgstr ""

#: ../../source/installation/troubleshooting.rst:48
msgid "Identifying and removing conflicting versions of manim"
msgstr ""

#: ../../source/installation/troubleshooting.rst:50
msgid "Within the system or environment you are using to run manim, run the following command in the terminal:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:57
msgid "The correct package for the community edition is simply ``manim``. If you do not see this package listed, please refer back to our installation guide to install it. If you see ``manimlib`` or ``manimce`` (actually an old version of the community edition), you should remove them with:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:68
msgid "If you have cloned a repository from GitHub, you should either remove it or run manim outside that folder."
msgstr ""

#: ../../source/installation/troubleshooting.rst:72
msgid "Other errors"
msgstr ""

#: ../../source/installation/troubleshooting.rst:75
msgid "``pip install manim`` fails when installing manimpango?"
msgstr ""

#: ../../source/installation/troubleshooting.rst:76
msgid "Most likely this means that pip was not able to use our pre-built wheels of ``manimpango``. Let us know (via our `Discord <https://www.manim.community/discord/>`_ or by opening a `new issue on GitHub <https://github.com/ManimCommunity/ManimPango/issues/new>`_) which architecture you would like to see supported, and we'll see what we can do about it."
msgstr ""

#: ../../source/installation/troubleshooting.rst:83
msgid "To fix errors when installing ``manimpango``, you need to make sure you have all the necessary build requirements. Check out the detailed instructions given in `the BUILDING section <https://github.com/ManimCommunity/ManimPango#BUILDING>`_ of the corresponding `GitHub repository <https://github.com/ManimCommunity/ManimPango>`_."
msgstr ""

#: ../../source/installation/troubleshooting.rst:91
msgid "(Windows) OSError: dlopen() failed to load a library: pango?"
msgstr ""

#: ../../source/installation/troubleshooting.rst:93
msgid "This should be fixed in Manim's latest version, update using ``pip install --upgrade manim``."
msgstr ""

#: ../../source/installation/troubleshooting.rst:99
msgid "Some letters are missing from Text/Tex output?"
msgstr ""

#: ../../source/installation/troubleshooting.rst:101
msgid "If you have recently installed TeX you may need to build the fonts it uses. Which can be done by running:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:112
msgid "Installation does not support converting PDF to SVG?"
msgstr ""

#: ../../source/installation/troubleshooting.rst:114
msgid "First, make sure your ``dvisvgm`` version is at least 2.4:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:121
msgid "If you do not know how to update ``dvisvgm``, please refer to your operating system's documentation."
msgstr ""

#: ../../source/installation/troubleshooting.rst:123
msgid "Second, check whether your ``dvisvgm`` supports PostScript specials. This is needed to convert from PDF to SVG."
msgstr ""

#: ../../source/installation/troubleshooting.rst:131
msgid "If the output to this command does **not** contain ``ps  dvips PostScript specials``, this is a bad sign. In this case, run"
msgstr ""

#: ../../source/installation/troubleshooting.rst:139
msgid "If the output does **not** contain ``--libgs=filename``, this means your ``dvisvgm`` does not currently support PostScript. You must get another binary."
msgstr ""

#: ../../source/installation/troubleshooting.rst:142
msgid "If, however, ``--libgs=filename`` appears in the help, that means that your ``dvisvgm`` needs the Ghostscript library to support PostScript. Search for ``libgs.so`` (on Linux, probably in ``/usr/local/lib`` or ``/usr/lib``) or ``gsdll32.dll`` (on 32-bit Windows, probably in ``C:\\windows\\system32``) or ``gsdll64.dll`` (on 64-bit Windows, probably in ``c:\\windows\\system32`` -- yes 32) or ``libgsl.dylib`` (on Mac OS, probably in ``/usr/local/lib`` or ``/opt/local/lib``). Please look carefully, as the file might be located elsewhere, e.g. in the directory where Ghostscript is installed."
msgstr ""

#: ../../source/installation/troubleshooting.rst:151
msgid "As soon as you have found the library, try (on Mac OS or Linux)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:158
msgid "or (on Windows)"
msgstr ""

#: ../../source/installation/troubleshooting.rst:166
msgid "You should now see ``ps    dvips PostScript specials`` in the output. Refer to your operating system's documentation to find out how you can set or export the environment variable ``LIBGS`` automatically whenever you open a shell."
msgstr ""

#: ../../source/installation/troubleshooting.rst:170
msgid "As a last check, you can run"
msgstr ""

#: ../../source/installation/troubleshooting.rst:176
msgid "while still having ``LIBGS`` set to the correct path, of course. If ``dvisvgm`` can find your Ghostscript installation, it will be shown in the output together with the version number."
msgstr ""

#: ../../source/installation/troubleshooting.rst:180
msgid "If you do not have the necessary library on your system, please refer to your operating system's documentation to find out where you can get it and how you have to install it."
msgstr ""

#: ../../source/installation/troubleshooting.rst:184
msgid "If you are unable to solve your problem, check out the `dvisvgm FAQ <https://dvisvgm.de/FAQ/>`_."
msgstr ""

#: ../../source/installation/troubleshooting.rst:187
msgid "(Windows) ``Python is not recognized as an internal or external command, operable program or batch file.``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:189
msgid "To fix this, you need to add the Python executable to your ``PATH`` environment variable. Follow the steps in `this StackExchange answer <https://superuser.com/questions/143119/how-do-i-add-python-to-the-windows-path/143121#143121>`__."
msgstr ""

#: ../../source/installation/troubleshooting.rst:193
msgid "``choco install manimce`` failed"
msgstr ""

#: ../../source/installation/troubleshooting.rst:195
msgid "If ``choco install manimce`` failed, it is likely being caused by Python not being added to your ``PATH`` variable properly. Try running the following commands in your terminal:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:199
msgid "``py --version``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:200
msgid "``python --version``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:201
msgid "``py3 --version``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:202
msgid "``python3 --version``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:204
msgid "Minimally, ``py --version`` and ``python --version`` should return a version. If none of these commands are recognized, this means that Python was installed on your system, but was not added to PATH. See above for directions to add it to your PATH variable."
msgstr ""

#: ../../source/installation/troubleshooting.rst:209
msgid "If any of these commands opens up the Windows store, this is likely interfering with the process. This is because Chocolatey runs a command that calls python or python3, and opening up the Windows store is not the expected behavior. See below to fix aliases."
msgstr ""

#: ../../source/installation/troubleshooting.rst:216
msgid "(Windows) Fix Aliases"
msgstr ""

#: ../../source/installation/troubleshooting.rst:218
msgid "Go to the Windows Settings."
msgstr ""

#: ../../source/installation/troubleshooting.rst:219
msgid "Under Apps and Features, there are an application execution aliases."
msgstr ""

#: ../../source/installation/troubleshooting.rst:220
msgid "Within this menu disable the alias(es) that is causing the issue (``python`` and/or ``python3``)."
msgstr ""

#: ../../source/installation/troubleshooting.rst:223
msgid "``IndexError: List index out of range``"
msgstr ""

#: ../../source/installation/troubleshooting.rst:225
msgid "Did you install LaTeX using MiKTeX? If so, open the MiKTeX console, install the ``cm-super`` package, then delete the ``media`` directory and try to render the scene again."
msgstr ""

#: ../../source/installation/troubleshooting.rst:230
msgid "Config"
msgstr ""

#: ../../source/installation/troubleshooting.rst:232
msgid "We've dropped the use of CONFIG in the Community Version :doc:`version 0.2.0<../changelog/0.2.0-changelog>`, released in January 2021. This means parameters that were previously specified in the CONFIG dictionary should now be passed directly into the constructor. Practically, this means that old constructions like:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:249
msgid "should now be defined like:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:269
msgid "For scenes, this is even easier:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:276
msgid "becomes:"
msgstr ""

#: ../../source/installation/troubleshooting.rst:286
msgid "A python command does not work"
msgstr ""

#: ../../source/installation/troubleshooting.rst:288
msgid "If a python command does not work, try adding ``python -m``  in front of it. For example, if ``pip install manim`` does not work, you can try ``python -m pip install manim``."
msgstr ""

#: ../../source/installation/troubleshooting.rst:293
msgid "undefined symbol"
msgstr ""


