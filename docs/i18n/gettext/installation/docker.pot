
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/installation/docker.rst:2
msgid "Docker"
msgstr ""

#: ../../source/installation/docker.rst:4
msgid "The community maintains a docker image, which can be found `on DockerHub <https://hub.docker.com/r/manimcommunity/manim>`__. For our image ``manimcommunity/manim``, there are the following tags:"
msgstr ""

#: ../../source/installation/docker.rst:8
msgid "``latest``: the most recent version corresponding to `the main branch <https://github.com/ManimCommunity/manim>`__,"
msgstr ""

#: ../../source/installation/docker.rst:10
msgid "``stable``: the latest released version (according to `the releases page <https://github.com/ManimCommunity/manim/releases>`__),"
msgstr ""

#: ../../source/installation/docker.rst:12
msgid "``vX.Y.Z``: any particular released version (according to `the releases page <https://github.com/ManimCommunity/manim/releases>`__)."
msgstr ""

#: ../../source/installation/docker.rst:17
msgid "When using Manim's CLI within a Docker container, some flags like ``-p`` (preview file) and ``-f`` (show output file in the file browser) are not supported."
msgstr ""

#: ../../source/installation/docker.rst:23
msgid "Basic usage of the Docker container"
msgstr ""

#: ../../source/installation/docker.rst:25
msgid "Assuming that you can access the docker installation on your system from a terminal (bash / PowerShell) via ``docker``, you can render a scene ``CircleToSquare`` in a file `test_scenes.py` with the following command."
msgstr ""

#: ../../source/installation/docker.rst:36
msgid "For Linux users there might be permission problems when letting the user in the container write to the mounted volume. Add ``--user=\"$(id -u):$(id -g)\"`` to the ``docker`` CLI arguments to prevent the creation of output files not belonging to your user."
msgstr ""

#: ../../source/installation/docker.rst:42
msgid "Instead of using the \"throwaway container\" approach outlined above, you can also create a named container that you can modify to your liking. First, run"
msgstr ""

#: ../../source/installation/docker.rst:51
msgid "to obtain an interactive shell inside your container allowing you to, e.g., install further dependencies (like texlive packages using ``tlmgr``). Exit the container as soon as you are satisfied. Then, before using it, start the container by running"
msgstr ""

#: ../../source/installation/docker.rst:60
msgid "which starts the container in the background. Then, to render a scene ``CircleToSquare`` in a file ``test_scenes.py``, run"
msgstr ""

#: ../../source/installation/docker.rst:69
msgid "Running JupyterLab via Docker"
msgstr ""

#: ../../source/installation/docker.rst:71
msgid "Another alternative to using the Docker image is to spin up a local JupyterLab instance. To do that, simply run"
msgstr ""


