# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Manim Community Dev Team
# This file is distributed under the same license as the Manim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-20 23:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:2
msgid "manim.mobject.types.vectorized\\_mobject.VMobject"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject:1
msgid "Bases: :class:`manim.mobject.mobject.Mobject`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:12
msgid "Methods"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_cubic_bezier_curve <manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_cubic_bezier_curve_to <manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1
msgid "Add cubic bezier curve to the path."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_line_to <manim.mobject.types.vectorized_mobject.VMobject.add_line_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_points_as_corners <manim.mobject.types.vectorized_mobject.VMobject.add_points_as_corners>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_smooth_curve_to <manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to:1
msgid "If two points are passed in, the first is intepretted as a handle, the second as an anchor"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`add_subpath <manim.mobject.types.vectorized_mobject.VMobject.add_subpath>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`align_points <manim.mobject.types.vectorized_mobject.VMobject.align_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`align_rgbas <manim.mobject.types.vectorized_mobject.VMobject.align_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`append_points <manim.mobject.types.vectorized_mobject.VMobject.append_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`append_vectorized_mobject <manim.mobject.types.vectorized_mobject.VMobject.append_vectorized_mobject>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`apply_function <manim.mobject.types.vectorized_mobject.VMobject.apply_function>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`change_anchor_mode <manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`clear_points <manim.mobject.types.vectorized_mobject.VMobject.clear_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`color_using_background_image <manim.mobject.types.vectorized_mobject.VMobject.color_using_background_image>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`consider_points_equals <manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`consider_points_equals_2d <manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d:1
msgid "Determine if two points are close enough to be considered equal."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`fade <manim.mobject.types.vectorized_mobject.VMobject.fade>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`force_direction <manim.mobject.types.vectorized_mobject.VMobject.force_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.force_direction:1
msgid "Makes sure that points are either directed clockwise or counterclockwise."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`gen_cubic_bezier_tuples_from_points <manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:1
msgid "Get a generator for the cubic bezier tuples of this object."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`gen_subpaths_from_points_2d <manim.mobject.types.vectorized_mobject.VMobject.gen_subpaths_from_points_2d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`generate_rgbas_array <manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid "First arg can be either a color, or a tuple/list of colors."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_anchors <manim.mobject.types.vectorized_mobject.VMobject.get_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_anchors_and_handles <manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles:1
msgid "returns anchors1, handles1, handles2, anchors2, where (anchors1[i], handles1[i], handles2[i], anchors2[i]) will be four points defining a cubic bezier curve for any i in range(0, len(anchors1))"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_arc_length <manim.mobject.types.vectorized_mobject.VMobject.get_arc_length>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_background_image_file <manim.mobject.types.vectorized_mobject.VMobject.get_background_image_file>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_color <manim.mobject.types.vectorized_mobject.VMobject.get_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_cubic_bezier_tuples <manim.mobject.types.vectorized_mobject.VMobject.get_cubic_bezier_tuples>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_cubic_bezier_tuples_from_points <manim.mobject.types.vectorized_mobject.VMobject.get_cubic_bezier_tuples_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_direction <manim.mobject.types.vectorized_mobject.VMobject.get_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid "Uses :func:`~.space_ops.shoelace_direction` to calculate the direction."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_end_anchors <manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_fill_color <manim.mobject.types.vectorized_mobject.VMobject.get_fill_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_fill_color:1
msgid "If there are multiple colors (for gradient) this returns the first one"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_fill_colors <manim.mobject.types.vectorized_mobject.VMobject.get_fill_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_fill_opacities <manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacities>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_fill_opacity <manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity:1
msgid "If there are multiple opacities, this returns the first"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_fill_rgbas <manim.mobject.types.vectorized_mobject.VMobject.get_fill_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_gradient_start_and_end_points <manim.mobject.types.vectorized_mobject.VMobject.get_gradient_start_and_end_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_group_class <manim.mobject.types.vectorized_mobject.VMobject.get_group_class>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_last_point <manim.mobject.types.vectorized_mobject.VMobject.get_last_point>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_nth_curve_function <manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_nth_curve_points <manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_num_curves <manim.mobject.types.vectorized_mobject.VMobject.get_num_curves>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_point_mobject <manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid "The simplest mobject to be transformed to or from self."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_points <manim.mobject.types.vectorized_mobject.VMobject.get_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_points_defining_boundary <manim.mobject.types.vectorized_mobject.VMobject.get_points_defining_boundary>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_sheen_direction <manim.mobject.types.vectorized_mobject.VMobject.get_sheen_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_sheen_factor <manim.mobject.types.vectorized_mobject.VMobject.get_sheen_factor>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_start_anchors <manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_color <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_colors <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_opacities <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_opacities>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_opacity <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_rgbas <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_stroke_width <manim.mobject.types.vectorized_mobject.VMobject.get_stroke_width>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_style <manim.mobject.types.vectorized_mobject.VMobject.get_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_subcurve <manim.mobject.types.vectorized_mobject.VMobject.get_subcurve>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_subpaths <manim.mobject.types.vectorized_mobject.VMobject.get_subpaths>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`get_subpaths_from_points <manim.mobject.types.vectorized_mobject.VMobject.get_subpaths_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`has_new_path_started <manim.mobject.types.vectorized_mobject.VMobject.has_new_path_started>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`init_colors <manim.mobject.types.vectorized_mobject.VMobject.init_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`insert_n_curves <manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`insert_n_curves_to_point_list <manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`interpolate_color <manim.mobject.types.vectorized_mobject.VMobject.interpolate_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`is_closed <manim.mobject.types.vectorized_mobject.VMobject.is_closed>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`make_jagged <manim.mobject.types.vectorized_mobject.VMobject.make_jagged>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`make_smooth <manim.mobject.types.vectorized_mobject.VMobject.make_smooth>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`match_background_image_file <manim.mobject.types.vectorized_mobject.VMobject.match_background_image_file>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`match_style <manim.mobject.types.vectorized_mobject.VMobject.match_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`point_from_proportion <manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`pointwise_become_partial <manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`reverse_direction <manim.mobject.types.vectorized_mobject.VMobject.reverse_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:1
msgid "Reverts the point direction by inverting the point order."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`scale_handle_to_anchor_distances <manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid "If the distance between a given handle point H and its associated anchor point A is d, then it changes H to be a distances factor*d away from A, but so that the line from A to H doesn't change."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_anchors_and_handles <manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_background_stroke <manim.mobject.types.vectorized_mobject.VMobject.set_background_stroke>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_color <manim.mobject.types.vectorized_mobject.VMobject.set_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid "Condition is function which takes in one arguments, (x, y, z)."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_fill <manim.mobject.types.vectorized_mobject.VMobject.set_fill>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_opacity <manim.mobject.types.vectorized_mobject.VMobject.set_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_points <manim.mobject.types.vectorized_mobject.VMobject.set_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_points_as_corners <manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_points_smoothly <manim.mobject.types.vectorized_mobject.VMobject.set_points_smoothly>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_shade_in_3d <manim.mobject.types.vectorized_mobject.VMobject.set_shade_in_3d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_sheen <manim.mobject.types.vectorized_mobject.VMobject.set_sheen>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_sheen_direction <manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_stroke <manim.mobject.types.vectorized_mobject.VMobject.set_stroke>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`set_style <manim.mobject.types.vectorized_mobject.VMobject.set_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`start_new_path <manim.mobject.types.vectorized_mobject.VMobject.start_new_path>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:103:<autosummary>:1
msgid ":obj:`update_rgbas_array <manim.mobject.types.vectorized_mobject.VMobject.update_rgbas_array>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:105
msgid "Attributes"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
msgid ":obj:`CONFIG <manim.mobject.types.vectorized_mobject.VMobject.CONFIG>`\\"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d:3
msgid "This uses the algorithm from np.isclose(), but expanded here for the 2D point case. NumPy is overkill for such a small question."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.force_direction:0
msgid "Parameters"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.force_direction:4
msgid "Either ``\"CW\"`` or ``\"CCW\"``."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:3
msgid "Generator to not materialize a list or np.array needlessly."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array:1
msgid "First arg can be either a color, or a tuple/list of colors. Likewise, opacity can either be a float, or a tuple of floats. If self.sheen_factor is not zero, and only one color was passed in, a second slightly light color will automatically be added for the gradient"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:1
msgid "Uses :func:`~.space_ops.shoelace_direction` to calculate the direction. The direction of points determines in which direction the object is drawn, clockwise or counterclockwise."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:6
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:7
msgid "Examples"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:7
msgid "The default direction of a :class:`~.Circle` is counterclockwise::"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:11
msgid "'CCW'"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:0
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:0
msgid "Returns"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:13
msgid "Either `\"CW\"` or `\"CCW\"`."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:0
#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:0
msgid "Return type"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_direction:14
msgid ":class:`str`"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject:1
msgid "The simplest mobject to be transformed to or from self. Should by a point of the appropriate type"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:3
msgid "Returns self."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:4
msgid ":class:`VMobject`"
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:1
msgid "If the distance between a given handle point H and its associated anchor point A is d, then it changes H to be a distances factor*d away from A, but so that the line from A to H doesn't change. This is mostly useful in the context of applying a (differentiable) function, to preserve tangency properties.  One would pull all the handles closer to their anchors, apply the function then push them out again."
msgstr ""

#: ../../../manim/mobject/types/vectorized_mobject.py:docstring of manim.mobject.types.vectorized_mobject.VMobject.set_color:1
msgid "Condition is function which takes in one arguments, (x, y, z). Here it just recurses to submobjects, but in subclasses this should be further implemented based on the the inner workings of color"
msgstr ""
