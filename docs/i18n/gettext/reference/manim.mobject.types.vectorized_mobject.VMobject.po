
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"POT-Creation-Date: 2021-09-16 14:16+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:2
msgid "VMobject"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:4
msgid "Qualified name: ``manim.mobject.types.vectorized\\_mobject.VMobject``"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject:1 of
msgid "Bases: :class:`manim.mobject.mobject.Mobject`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject:1 of
msgid "A vectorized mobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:14
msgid "Methods"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_cubic_bezier_curve "
"<manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_cubic_bezier_curve_to "
"<manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1
#: of
msgid "Add cubic bezier curve to the path."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_line_to "
"<manim.mobject.types.vectorized_mobject.VMobject.add_line_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.add_line_to:1 of
msgid "Add a straight line from the last point of VMobject to the given point."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_points_as_corners "
"<manim.mobject.types.vectorized_mobject.VMobject.add_points_as_corners>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_quadratic_bezier_curve_to "
"<manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to:1
#: of
msgid "Add Quadratic bezier curve to the path."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_smooth_curve_to "
"<manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "Creates a smooth curve from given points and add it to the VMobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`add_subpath "
"<manim.mobject.types.vectorized_mobject.VMobject.add_subpath>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`align_points "
"<manim.mobject.types.vectorized_mobject.VMobject.align_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`align_rgbas "
"<manim.mobject.types.vectorized_mobject.VMobject.align_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`append_points "
"<manim.mobject.types.vectorized_mobject.VMobject.append_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`append_vectorized_mobject "
"<manim.mobject.types.vectorized_mobject.VMobject.append_vectorized_mobject>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`apply_function "
"<manim.mobject.types.vectorized_mobject.VMobject.apply_function>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`change_anchor_mode "
"<manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "Changes the anchor mode of the bezier curves."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`clear_points "
"<manim.mobject.types.vectorized_mobject.VMobject.clear_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`color_using_background_image "
"<manim.mobject.types.vectorized_mobject.VMobject.color_using_background_image>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`consider_points_equals "
"<manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`consider_points_equals_2d "
"<manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d:1
#: of
msgid "Determine if two points are close enough to be considered equal."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`force_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.force_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.force_direction:1 of
msgid "Makes sure that points are either directed clockwise or counterclockwise."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`gen_cubic_bezier_tuples_from_points "
"<manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:1
#: of
msgid "Returns the bezier tuples from an array of points."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`gen_subpaths_from_points_2d "
"<manim.mobject.types.vectorized_mobject.VMobject.gen_subpaths_from_points_2d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`generate_rgbas_array "
"<manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "First arg can be either a color, or a tuple/list of colors."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_anchors "
"<manim.mobject.types.vectorized_mobject.VMobject.get_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors:1 of
msgid "Returns the anchors of the curves forming the VMobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_anchors_and_handles "
"<manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles:1 of
msgid ""
"Returns anchors1, handles1, handles2, anchors2, where (anchors1[i], "
"handles1[i], handles2[i], anchors2[i]) will be four points defining a "
"cubic bezier curve for any i in range(0, len(anchors1))"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_arc_length "
"<manim.mobject.types.vectorized_mobject.VMobject.get_arc_length>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length:1 of
msgid "Return the approximated length of the whole curve."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_background_image "
"<manim.mobject.types.vectorized_mobject.VMobject.get_background_image>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_color "
"<manim.mobject.types.vectorized_mobject.VMobject.get_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_color:1 of
msgid "Returns the color of the :class:`~.Mobject`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_cubic_bezier_tuples "
"<manim.mobject.types.vectorized_mobject.VMobject.get_cubic_bezier_tuples>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_cubic_bezier_tuples_from_points "
"<manim.mobject.types.vectorized_mobject.VMobject.get_cubic_bezier_tuples_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_curve_functions "
"<manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions:1 of
msgid "Gets the functions for the curves of the mobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_curve_functions_with_lengths "
"<manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths:1
#: of
msgid "Gets the functions and lengths of the curves for the mobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.get_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "Uses :func:`~.space_ops.shoelace_direction` to calculate the direction."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_end_anchors "
"<manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors:1 of
msgid "Return the starting anchors of the bezier curves."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_fill_color "
"<manim.mobject.types.vectorized_mobject.VMobject.get_fill_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_fill_color:1 of
msgid "If there are multiple colors (for gradient) this returns the first one"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_fill_colors "
"<manim.mobject.types.vectorized_mobject.VMobject.get_fill_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_fill_opacities "
"<manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacities>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_fill_opacity "
"<manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity:1 of
msgid "If there are multiple opacities, this returns the first"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_fill_rgbas "
"<manim.mobject.types.vectorized_mobject.VMobject.get_fill_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_gradient_start_and_end_points "
"<manim.mobject.types.vectorized_mobject.VMobject.get_gradient_start_and_end_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_group_class "
"<manim.mobject.types.vectorized_mobject.VMobject.get_group_class>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_last_point "
"<manim.mobject.types.vectorized_mobject.VMobject.get_last_point>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_nth_curve_function "
"<manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function:1 of
msgid "Returns the expression of the nth curve."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_nth_curve_function_with_length "
"<manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:1
#: of
msgid ""
"Returns the expression of the nth curve along with its (approximate) "
"length."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_nth_curve_length "
"<manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length:1 of
msgid "Returns the (approximate) length of the nth curve."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_nth_curve_points "
"<manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points:1 of
msgid "Returns the points defining the nth curve of the vmobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_num_curves "
"<manim.mobject.types.vectorized_mobject.VMobject.get_num_curves>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_num_curves:1 of
msgid "Returns the number of curves of the vmobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_point_mobject "
"<manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "The simplest :class:`~.Mobject` to be transformed to or from self."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_points "
"<manim.mobject.types.vectorized_mobject.VMobject.get_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_points_defining_boundary "
"<manim.mobject.types.vectorized_mobject.VMobject.get_points_defining_boundary>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_sheen_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.get_sheen_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_sheen_factor "
"<manim.mobject.types.vectorized_mobject.VMobject.get_sheen_factor>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_start_anchors "
"<manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors:1 of
msgid "Returns the start anchors of the bezier curves."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_color "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_colors "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_opacities "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_opacities>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_opacity "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_rgbas "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_rgbas>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_stroke_width "
"<manim.mobject.types.vectorized_mobject.VMobject.get_stroke_width>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_style "
"<manim.mobject.types.vectorized_mobject.VMobject.get_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_subcurve "
"<manim.mobject.types.vectorized_mobject.VMobject.get_subcurve>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "Returns the subcurve of the VMobject between the interval [a, b]."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_subpaths "
"<manim.mobject.types.vectorized_mobject.VMobject.get_subpaths>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.get_subpaths:1 of
msgid "Returns subpaths formed by the curves of the VMobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`get_subpaths_from_points "
"<manim.mobject.types.vectorized_mobject.VMobject.get_subpaths_from_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`has_new_path_started "
"<manim.mobject.types.vectorized_mobject.VMobject.has_new_path_started>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`init_colors "
"<manim.mobject.types.vectorized_mobject.VMobject.init_colors>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.init_colors:1 of
msgid "Initializes the colors."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`insert_n_curves "
"<manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves:1 of
msgid "Inserts n curves to the bezier curves of the vmobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`insert_n_curves_to_point_list "
"<manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list:1
#: of
msgid ""
"Given an array of k points defining a bezier curves (anchors and "
"handles), returns points defining exactly k + n bezier curves."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`interpolate_color "
"<manim.mobject.types.vectorized_mobject.VMobject.interpolate_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`is_closed "
"<manim.mobject.types.vectorized_mobject.VMobject.is_closed>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`make_jagged "
"<manim.mobject.types.vectorized_mobject.VMobject.make_jagged>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`make_smooth "
"<manim.mobject.types.vectorized_mobject.VMobject.make_smooth>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`match_background_image "
"<manim.mobject.types.vectorized_mobject.VMobject.match_background_image>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`match_style "
"<manim.mobject.types.vectorized_mobject.VMobject.match_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`point_from_proportion "
"<manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:1 of
msgid "Gets the point at a proportion along the path of the :class:`VMobject`."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`pointwise_become_partial "
"<manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
"Given two bounds a and b, transforms the points of the self vmobject into"
" the points of the vmobject passed as parameter with respect to the "
"bounds."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`proportion_from_point "
"<manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point:1 of
msgid ""
"Returns the proportion along the path of the :class:`VMobject` a "
"particular given point is at."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`reverse_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.reverse_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:1 of
msgid "Reverts the point direction by inverting the point order."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.rotate:1 of
msgid "Rotates the :class:`~.Mobject` about a certain point."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`rotate_sheen_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:1 of
msgid "Rotates the direction of the applied sheen."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`scale_handle_to_anchor_distances "
"<manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
"If the distance between a given handle point H and its associated anchor "
"point A is d, then it changes H to be a distances factor*d away from A, "
"but so that the line from A to H doesn't change."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_anchors_and_handles "
"<manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles:1 of
msgid ""
"Given two sets of anchors and handles, process them to set them as "
"anchors and handles of the VMobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_background_stroke "
"<manim.mobject.types.vectorized_mobject.VMobject.set_background_stroke>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_color "
"<manim.mobject.types.vectorized_mobject.VMobject.set_color>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid "Condition is function which takes in one arguments, (x, y, z)."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:1 of
msgid "Set the fill color and fill opacity of a :class:`VMobject`."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_opacity "
"<manim.mobject.types.vectorized_mobject.VMobject.set_opacity>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_points "
"<manim.mobject.types.vectorized_mobject.VMobject.set_points>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_points_as_corners "
"<manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners:1 of
msgid "Given an array of points, set them as corner of the vmobject."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_points_smoothly "
"<manim.mobject.types.vectorized_mobject.VMobject.set_points_smoothly>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_shade_in_3d "
"<manim.mobject.types.vectorized_mobject.VMobject.set_shade_in_3d>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_sheen "
"<manim.mobject.types.vectorized_mobject.VMobject.set_sheen>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen:1 of
msgid "Applies a color gradient from a direction."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_sheen_direction "
"<manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction:1 of
msgid "Sets the direction of the applied sheen."
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_stroke "
"<manim.mobject.types.vectorized_mobject.VMobject.set_stroke>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`set_style "
"<manim.mobject.types.vectorized_mobject.VMobject.set_style>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`start_new_path "
"<manim.mobject.types.vectorized_mobject.VMobject.start_new_path>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:113:<autosummary>:1
msgid ""
":obj:`update_rgbas_array "
"<manim.mobject.types.vectorized_mobject.VMobject.update_rgbas_array>`"
msgstr ""

#: ../../source/reference/manim.mobject.types.vectorized_mobject.VMobject.rst:115
msgid "Attributes"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
#: of
msgid "Used to animate the application of a method."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
#: of
msgid ""
":obj:`animation_overrides "
"<manim.mobject.types.vectorized_mobject.VMobject.animation_overrides>`\\"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
#: of
msgid "The depth of the mobject."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
#: of
msgid "The height of the mobject."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:1:<autosummary>:1
#: of
msgid "The width of the mobject."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:3
#: of
msgid ""
"NOTE : the first anchor is not a parameter as by default the end of the "
"last sub-path!"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_line_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode
#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d
#: manim.mobject.types.vectorized_mobject.VMobject.force_direction
#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list
#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion
#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point
#: manim.mobject.types.vectorized_mobject.VMobject.rotate
#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction
#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances
#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles
#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction of
msgid "Parameters"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:5
#: of
msgid "first handle"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:7
#: of
msgid "second handle"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to:9
#: of
msgid "anchor"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_line_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode
#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d
#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles
#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths
#: manim.mobject.types.vectorized_mobject.VMobject.get_direction
#: manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_num_curves
#: manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve
#: manim.mobject.types.vectorized_mobject.VMobject.get_subpaths
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list
#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion
#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point
#: manim.mobject.types.vectorized_mobject.VMobject.rotate
#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances
#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles
#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners of
msgid "Return type"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_line_to:3 of
msgid "end of the straight line."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to:1 of
msgid ""
"Creates a smooth curve from given points and add it to the VMobject. If "
"two points are passed in, the first is interpreted as a handle, the "
"second as an anchor."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to:4 of
msgid "Points (anchor and handle, or just anchor) to add a smooth curve from"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode
#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d
#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles
#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions
#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths
#: manim.mobject.types.vectorized_mobject.VMobject.get_direction
#: manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points
#: manim.mobject.types.vectorized_mobject.VMobject.get_num_curves
#: manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors
#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve
#: manim.mobject.types.vectorized_mobject.VMobject.get_subpaths
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves
#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list
#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point
#: manim.mobject.types.vectorized_mobject.VMobject.rotate
#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances
#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles
#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners of
msgid "Returns"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to
#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point of
msgid "Raises"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to:10 of
msgid "If 0 or more than 2 points are given."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode:1 of
msgid ""
"Changes the anchor mode of the bezier curves. This will modify the "
"handles."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode:3 of
msgid "There can be only two modes, \"jagged\", and \"smooth\"."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode:5 of
msgid "For chaining purposes."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d:3
#: of
msgid ""
"This uses the algorithm from np.isclose(), but expanded here for the 2D "
"point case. NumPy is overkill for such a small question. :param p0: first"
" point :type p0: np.ndarray :param p1: second point :type p1: np.ndarray"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d:10
#: of
msgid "whether two points considered close."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.force_direction:4
#: manim.mobject.types.vectorized_mobject.VMobject.get_direction:13 of
msgid "Either ``\"CW\"`` or ``\"CCW\"``."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:3
#: of
msgid ""
"self.points is a list of the anchors and handles of the bezier curves of "
"the mobject (ie [anchor1, handle1, handle2, anchor2, anchor3 ..]) This "
"algorithm basically retrieve them by taking an element every n, where n "
"is the number of control points of the bezier curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:8
#: of
msgid "Points from which control points will be extracted."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points:11
#: of
msgid "Bezier control points."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array:1 of
msgid ""
"First arg can be either a color, or a tuple/list of colors. Likewise, "
"opacity can either be a float, or a tuple of floats. If self.sheen_factor"
" is not zero, and only one color was passed in, a second slightly light "
"color will automatically be added for the gradient"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors:3 of
msgid "The anchors."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles:6 of
msgid "Iterable of the anchors and handles."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length:3 of
msgid ""
"Number of sample points per curve used to approximate the length. More "
"points result in a better approximation."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_arc_length:5 of
msgid "The length of the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions:3 of
msgid "The functions for the curves."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths:3
#: of
msgid "The keyword arguments passed to :meth:`get_nth_curve_function_with_length`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths:5
#: of
msgid "The functions and lengths of the curves."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_direction:1 of
msgid ""
"Uses :func:`~.space_ops.shoelace_direction` to calculate the direction. "
"The direction of points determines in which direction the object is "
"drawn, clockwise or counterclockwise."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_direction:6
#: manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:7
#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:9
#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:11
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen:11
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction:7 of
msgid "Examples"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_direction:7 of
msgid "The default direction of a :class:`~.Circle` is counterclockwise::"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_direction:14 of
msgid ":class:`str`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors:3
#: manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors:3 of
msgid "Starting anchors"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function:3 of
msgid "index of the desired curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function:6 of
msgid "expression of the nth bezier curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:3
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length:3 of
msgid "The index of the desired curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:4
#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length:4 of
msgid "The number of points to sample to find the length."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:6
#: of
msgid ""
"* **curve** (*typing.Callable[[float], np.ndarray]*) -- The function for "
"the nth curve. * **length** (:class:`float`) -- The length of the nth "
"curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:6
#: of
msgid ""
"**curve** (*typing.Callable[[float], np.ndarray]*) -- The function for "
"the nth curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length:7
#: of
msgid "**length** (:class:`float`) -- The length of the nth curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length:6 of
msgid "**length** -- The length of the nth curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length:7 of
msgid ":class:`float`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points:3 of
msgid "index of the desired bezier curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points:6 of
msgid "points defininf the nth bezier curve (anchors, handles)"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_num_curves:3 of
msgid "number of curves. of the vmobject."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject:1 of
msgid ""
"The simplest :class:`~.Mobject` to be transformed to or from self. Should"
" by a point of the appropriate type"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_points:1 of
msgid "Deprecated"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_points:4 of
msgid ""
"The method VMobject.get_points has been deprecated since 0.11.0 and may "
"be removed in a later version. Use :meth:`~.self.points` instead."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve:1 of
msgid ""
"Returns the subcurve of the VMobject between the interval [a, b]. The "
"curve is a VMobject itself."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve:4 of
msgid "The lower bound."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve:5 of
msgid "The upper bound."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subcurve:7 of
msgid "The subcurve between of [a, b]"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subpaths:3 of
msgid ""
"We define a subpath between two curve if one of their extreminities are "
"coincidents."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.get_subpaths:5 of
msgid "subpaths."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.init_colors:3 of
msgid ""
"Gets called upon creation. This is an empty method that can be "
"implemented by subclasses."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves:3 of
msgid "Number of curves to insert."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves:5
#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles:9 of
msgid "for chaining."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list:3
#: of
msgid "Number of desired curves."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list:5
#: of
msgid "Starting points."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list:8
#: of
msgid "Points generated."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:3 of
msgid "The proportion along the the path of the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:5 of
msgid "The point on the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:6 of
msgid ":class:`numpy.ndarray`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:8 of
msgid "If ``alpha`` is not between 0 and 1."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion:9
#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point:10 of
msgid "If the :class:`VMobject` has no points."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial:1
#: of
msgid ""
"Given two bounds a and b, transforms the points of the self vmobject into"
" the points of the vmobject passed as parameter with respect to the "
"bounds. Points here stand for control points of the bezier curves "
"(anchors and handles)"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial:4
#: of
msgid "The vmobject that will serve as a model."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial:6
#: of
msgid "upper-bound."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial:8
#: of
msgid "lower-bound"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point:4 of
msgid ""
"The Cartesian coordinates of the point which may or may not lie on the "
":class:`VMobject`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point:6 of
msgid "The proportion along the path of the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point:9 of
msgid "If ``point`` does not lie on the curve."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:3 of
msgid "Returns self."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.reverse_direction:4 of
msgid ":class:`VMobject`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:3 of
msgid "Angle by which the direction of sheen is rotated."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:5 of
msgid "Axis of rotation."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:10
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction:8 of
msgid "Normal usage::"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction:14 of
msgid ":meth:`~.VMobject.set_sheen_direction`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:1
#: of
msgid ""
"If the distance between a given handle point H and its associated anchor "
"point A is d, then it changes H to be a distances factor*d away from A, "
"but so that the line from A to H doesn't change. This is mostly useful in"
" the context of applying a (differentiable) function, to preserve "
"tangency properties.  One would pull all the handles closer to their "
"anchors, apply the function then push them out again."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:9
#: of
msgid "The factor used for scaling."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances:11
#: of
msgid "For chaining."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles:4 of
msgid ""
"anchors1[i], handles1[i], handles2[i] and anchors2[i] define the i-th "
"bezier curve of the vmobject. There are four hardcoded parameters and "
"this is a problem as it makes the number of points per cubic curve "
"unchangeable from 4 (two anchors and two handles)."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_color:1 of
msgid ""
"Condition is function which takes in one arguments, (x, y, z). Here it "
"just recurses to submobjects, but in subclasses this should be further "
"implemented based on the the inner workings of color"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:3 of
msgid "Fill color of the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:4 of
msgid "Fill opacity of the :class:`VMobject`."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:5 of
msgid "If ``True``, the fill color of all submobjects is also set."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:7
#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners:9 of
msgid "self. For chaining purposes."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_fill:25 of
msgid ":meth:`~.VMobject.set_style`"
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners:3 of
msgid ""
"To achieve that, this algorithm sets handles aligned with the anchors "
"such that the resultant bezier curve will be the segment between the two "
"anchors."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners:6 of
msgid "Array of points that will be set as corners."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen:3 of
msgid ""
"The extent of lustre/gradient to apply. If negative, the gradient starts "
"from black, if positive the gradient starts from white and changes to the"
" current color."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen:7
#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction:3 of
msgid "Direction from where the gradient is applied."
msgstr ""

#: manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction:12 of
msgid ":meth:`~.VMobject.set_sheen`, :meth:`~.VMobject.rotate_sheen_direction`"
msgstr ""


