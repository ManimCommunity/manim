# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Manim Community Dev Team
# This file is distributed under the same license as the Manim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-04 23:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/reference/manim.mobject.types.image_mobject.AbstractImageMobject.rst:2
msgid "manim.mobject.types.image\\_mobject.AbstractImageMobject"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject:1 of
msgid "Bases: :class:`manim.mobject.mobject.Mobject`"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject:1 of
msgid "Automatically filters out black pixels"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject of
msgid "Parameters"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject:3 of
msgid ""
"At this resolution the image is placed pixel by pixel onto the screen, so"
" it will look the sharpest and best. This is a custom parameter of "
"ImageMobject so that rendering a scene with e.g. the ``--quality low`` or"
" ``--quality medium`` flag for faster rendering won't effect the position"
" of the image on the screen."
msgstr ""

#: ../../source/reference/manim.mobject.types.image_mobject.AbstractImageMobject.rst:12
msgid "Methods"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject.set_color:1:<autosummary>:1
#: of
msgid ""
":obj:`get_pixel_array "
"<manim.mobject.types.image_mobject.AbstractImageMobject.get_pixel_array>`"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject.set_color:1:<autosummary>:1
#: of
msgid ""
":obj:`reset_points "
"<manim.mobject.types.image_mobject.AbstractImageMobject.reset_points>`"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject.set_color:1:<autosummary>:1
#: of
msgid ""
":obj:`set_color "
"<manim.mobject.types.image_mobject.AbstractImageMobject.set_color>`"
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject.set_color:1:<autosummary>:1
#: of
msgid "Condition is function which takes in one arguments, (x, y, z)."
msgstr ""

#: manim.mobject.types.image_mobject.AbstractImageMobject.set_color:1 of
msgid ""
"Condition is function which takes in one arguments, (x, y, z). Here it "
"just recurses to submobjects, but in subclasses this should be further "
"implemented based on the the inner workings of color"
msgstr ""

#~ msgid "Attributes"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`CONFIG "
#~ "<manim.mobject.types.image_mobject.AbstractImageMobject.CONFIG>`\\"
#~ msgstr ""

