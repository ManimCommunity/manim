# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Manim Community Dev Team
# This file is distributed under the same license as the Manim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-20 23:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:2
msgid "manim.utils.hashing.CustomEncoder"
msgstr ""

#: manim.utils.hashing.CustomEncoder:1 of
msgid "Bases: :class:`json.encoder.JSONEncoder`"
msgstr ""

#: manim.utils.hashing.CustomEncoder:1 of
msgid "Constructor for JSONEncoder, with sensible defaults."
msgstr ""

#: manim.utils.hashing.CustomEncoder:3 of
msgid ""
"If skipkeys is false, then it is a TypeError to attempt encoding of keys "
"that are not str, int, float or None.  If skipkeys is True, such items "
"are simply skipped."
msgstr ""

#: manim.utils.hashing.CustomEncoder:7 of
msgid ""
"If ensure_ascii is true, the output is guaranteed to be str objects with "
"all incoming non-ASCII characters escaped.  If ensure_ascii is false, the"
" output can contain non-ASCII characters."
msgstr ""

#: manim.utils.hashing.CustomEncoder:11 of
msgid ""
"If check_circular is true, then lists, dicts, and custom encoded objects "
"will be checked for circular references during encoding to prevent an "
"infinite recursion (which would cause an OverflowError). Otherwise, no "
"such check takes place."
msgstr ""

#: manim.utils.hashing.CustomEncoder:16 of
msgid ""
"If allow_nan is true, then NaN, Infinity, and -Infinity will be encoded "
"as such.  This behavior is not JSON specification compliant, but is "
"consistent with most JavaScript based encoders and decoders. Otherwise, "
"it will be a ValueError to encode such floats."
msgstr ""

#: manim.utils.hashing.CustomEncoder:21 of
msgid ""
"If sort_keys is true, then the output of dictionaries will be sorted by "
"key; this is useful for regression tests to ensure that JSON "
"serializations can be compared on a day-to-day basis."
msgstr ""

#: manim.utils.hashing.CustomEncoder:25 of
msgid ""
"If indent is a non-negative integer, then JSON array elements and object "
"members will be pretty-printed with that indent level.  An indent level "
"of 0 will only insert newlines. None is the most compact representation."
msgstr ""

#: manim.utils.hashing.CustomEncoder:30 of
msgid ""
"If specified, separators should be an (item_separator, key_separator) "
"tuple.  The default is (', ', ': ') if *indent* is ``None`` and (',', ': "
"') otherwise.  To get the most compact JSON representation, you should "
"specify (',', ':') to eliminate whitespace."
msgstr ""

#: manim.utils.hashing.CustomEncoder:35 of
msgid ""
"If specified, default is a function that gets called for objects that "
"can't otherwise be serialized.  It should return a JSON encodable version"
" of the object or raise a ``TypeError``."
msgstr ""

#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:12
msgid "Methods"
msgstr ""

#Detected untranslatable text:
#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:19:<autosummary>:1
#msgid ":obj:`default <manim.utils.hashing.CustomEncoder.default>`"
#msgstr ""

#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:19:<autosummary>:1
#: manim.utils.hashing.CustomEncoder.default:1 of
msgid "This method is used to serialize objects to JSON format."
msgstr ""

#Detected untranslatable text:
#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:19:<autosummary>:1
#msgid ":obj:`encode <manim.utils.hashing.CustomEncoder.encode>`"
#msgstr ""

#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:19:<autosummary>:1
#: manim.utils.hashing.CustomEncoder.encode:1 of
msgid "Overriding of :meth:`JSONEncoder.encode`, to make our own process."
msgstr ""

#: ../../source/reference/manim.utils.hashing.CustomEncoder.rst:21
msgid "Attributes"
msgstr ""

#Detected untranslatable text:
#: manim.utils.hashing.CustomEncoder.default:1:<autosummary>:1 of
#msgid ":obj:`item_separator <manim.utils.hashing.CustomEncoder.item_separator>`\\"
#msgstr ""

#Detected untranslatable text:
#: manim.utils.hashing.CustomEncoder.default:1:<autosummary>:1 of
#msgid ":obj:`key_separator <manim.utils.hashing.CustomEncoder.key_separator>`\\"
#msgstr ""

#: manim.utils.hashing.CustomEncoder.default:3 of
msgid ""
"If obj is a function, then it will return a dict with two keys : 'code', "
"for the code source, and 'nonlocals' for all nonlocalsvalues. (including "
"nonlocals functions, that will be serialized as this is recursive.) if "
"obj is a np.darray, it converts it into a list. if obj is an object with "
"__dict__ attribute, it returns its __dict__. Else, will let the "
"JSONEncoder do the stuff, and throw an error if the type is not suitable "
"for JSONEncoder."
msgstr ""

#: manim.utils.hashing.CustomEncoder.default
#: manim.utils.hashing.CustomEncoder.encode of
msgid "Parameters"
msgstr ""

#: manim.utils.hashing.CustomEncoder.default:8 of
msgid "Arbitrary object to convert"
msgstr ""

#: manim.utils.hashing.CustomEncoder.default
#: manim.utils.hashing.CustomEncoder.encode of
msgid "Returns"
msgstr ""

#: manim.utils.hashing.CustomEncoder.default:11 of
msgid "Python object that JSON encoder will recognize"
msgstr ""

#: manim.utils.hashing.CustomEncoder.default
#: manim.utils.hashing.CustomEncoder.encode of
msgid "Return type"
msgstr ""

#: manim.utils.hashing.CustomEncoder.encode:3 of
msgid "The object to encode in JSON."
msgstr ""

#: manim.utils.hashing.CustomEncoder.encode:6 of
msgid "The object encoder with the standard json process."
msgstr ""

#: manim.utils.hashing.CustomEncoder.encode:7 of
msgid ":class:`str`"
msgstr ""


