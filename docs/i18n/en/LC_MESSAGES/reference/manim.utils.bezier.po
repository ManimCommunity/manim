
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"POT-Creation-Date: 2021-09-16 14:16+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/manim.utils.bezier.rst:2
msgid "bezier"
msgstr ""

#: manim.utils.bezier:1 of
msgid "Utility functions related to BÃ©zier curves."
msgstr ""

#: ../../source/reference/manim.utils.bezier.rst:20
msgid "Functions"
msgstr ""

#: manim.utils.bezier.bezier:1 of
msgid "Classic implementation of a bezier curve."
msgstr ""

#: manim.utils.bezier.bezier manim.utils.bezier.diag_to_matrix
#: manim.utils.bezier.get_smooth_handle_points
#: manim.utils.bezier.integer_interpolate manim.utils.bezier.interpolate
#: manim.utils.bezier.inverse_interpolate manim.utils.bezier.is_closed
#: manim.utils.bezier.match_interpolate manim.utils.bezier.mid
#: manim.utils.bezier.partial_bezier_points
#: manim.utils.bezier.point_lies_on_bezier
#: manim.utils.bezier.proportions_along_bezier_curve_for_point of
msgid "Parameters"
msgstr ""

#: manim.utils.bezier.bezier:3 of
msgid "points defining the desired bezier curve."
msgstr ""

#: manim.utils.bezier.bezier manim.utils.bezier.get_smooth_handle_points
#: manim.utils.bezier.partial_bezier_points
#: manim.utils.bezier.point_lies_on_bezier
#: manim.utils.bezier.proportions_along_bezier_curve_for_point of
msgid "Returns"
msgstr ""

#: manim.utils.bezier.bezier:6 of
msgid "function describing the bezier curve."
msgstr ""

#: manim.utils.bezier.bezier manim.utils.bezier.diag_to_matrix
#: manim.utils.bezier.get_smooth_handle_points
#: manim.utils.bezier.integer_interpolate manim.utils.bezier.interpolate
#: manim.utils.bezier.inverse_interpolate manim.utils.bezier.is_closed
#: manim.utils.bezier.match_interpolate manim.utils.bezier.mid
#: manim.utils.bezier.partial_bezier_points
#: manim.utils.bezier.point_lies_on_bezier
#: manim.utils.bezier.proportions_along_bezier_curve_for_point of
msgid "Return type"
msgstr ""

#: manim.utils.bezier.diag_to_matrix:1 of
msgid ""
"Converts array whose rows represent diagonal entries of a matrix into the"
" matrix itself. See scipy.linalg.solve_banded"
msgstr ""

#: manim.utils.bezier.get_smooth_handle_points:1 of
msgid ""
"Given some anchors (points), compute handles so the resulting bezier "
"curve is smooth."
msgstr ""

#: manim.utils.bezier.get_smooth_handle_points:3 of
msgid "Anchors."
msgstr ""

#: manim.utils.bezier.get_smooth_handle_points:6 of
msgid "Computed handles."
msgstr ""

#: manim.utils.bezier.integer_interpolate:1 of
msgid ""
"Alpha is a float between 0 and 1.  This returns an integer between start "
"and end (inclusive) representing appropriate interpolation between them, "
"along with a \"residue\" representing a new proportion between the "
"returned integer and the next one of the list."
msgstr ""

#: manim.utils.bezier.integer_interpolate:8 of
msgid "For example, if start=0, end=10, alpha=0.46, This would return (4, 0.6)."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:1 of
msgid ""
"Given an array of points which define bezier curve, and two numbers "
"0<=a<b<=1, return an array of the same size, which describes the portion "
"of the original bezier curve on the interval [a, b]."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:4 of
msgid "This algorithm is pretty nifty, and pretty dense."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:6 of
msgid "set of points defining the bezier curve."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:8 of
msgid "lower bound of the desired partial bezier curve."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:10 of
msgid "upper bound of the desired partial bezier curve."
msgstr ""

#: manim.utils.bezier.partial_bezier_points:13 of
msgid "Set of points defining the partial bezier curve."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:1 of
msgid ""
"Checks if a given point lies on the bezier curves with the given control "
"points."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:3 of
msgid ""
"This is done by solving the bezier polynomial with the point as the "
"constant term; if any real roots exist, the point lies on the bezier "
"curve."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:6 of
msgid "The Cartesian Coordinates of the point to check."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:7
#: manim.utils.bezier.proportions_along_bezier_curve_for_point:11 of
msgid ""
"The Cartesian Coordinates of the ordered control points of the bezier "
"curve on which the point may or may not lie."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:10
#: manim.utils.bezier.proportions_along_bezier_curve_for_point:14 of
msgid ""
"A float whose number of decimal places all values such as coordinates of "
"points will be rounded."
msgstr ""

#: manim.utils.bezier.point_lies_on_bezier:13 of
msgid "Whether the point lies on the curve."
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point:1 of
msgid ""
"Obtains the proportion along the bezier curve corresponding to a given "
"point given the bezier curve's control points."
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point:4 of
msgid ""
"The bezier polynomial is constructed using the coordinates of the given "
"point as well as the bezier curve's control points. On solving the "
"polynomial for each dimension, if there are roots common to every "
"dimension, those roots give the proportion along the curve the point is "
"at. If there are no real roots, the point does not lie on the curve."
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point:9 of
msgid "The Cartesian Coordinates of the point whose parameter should be obtained."
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point:17 of
msgid ""
"List containing possible parameters (the proportions along the bezier "
"curve) for the given point on the given bezier curve. This usually only "
"contains one or zero elements, but if the point is, say, at the "
"beginning/end of a closed loop, may return a list with more than 1 value,"
" corresponding to the beginning and end etc. of the loop."
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point of
msgid "Raises"
msgstr ""

#: manim.utils.bezier.proportions_along_bezier_curve_for_point:25 of
msgid "When ``point`` and the control points have different shapes."
msgstr ""


