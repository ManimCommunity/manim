
msgid ""
msgstr ""
"Project-Id-Version: Manim \n"
"POT-Creation-Date: 2021-09-16 14:16+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/manim.utils.space_ops.rst:2
msgid "space\\_ops"
msgstr ""

#: manim.utils.space_ops:1 of
msgid "Utility functions for two- and three-dimensional vectors."
msgstr ""

#: ../../source/reference/manim.utils.space_ops.rst:20
msgid "Functions"
msgstr ""

#: manim.utils.space_ops.R3_to_complex
#: manim.utils.space_ops.angle_axis_from_quaternion
#: manim.utils.space_ops.angle_between_vectors
#: manim.utils.space_ops.angle_of_vector manim.utils.space_ops.center_of_mass
#: manim.utils.space_ops.compass_directions manim.utils.space_ops.complex_to_R3
#: manim.utils.space_ops.earclip_triangulation
#: manim.utils.space_ops.get_unit_normal
#: manim.utils.space_ops.get_winding_number
#: manim.utils.space_ops.line_intersection manim.utils.space_ops.midpoint
#: manim.utils.space_ops.norm_squared manim.utils.space_ops.normalize
#: manim.utils.space_ops.normalize_along_axis
#: manim.utils.space_ops.perpendicular_bisector
#: manim.utils.space_ops.project_along_vector
#: manim.utils.space_ops.quaternion_conjugate
#: manim.utils.space_ops.quaternion_from_angle_axis
#: manim.utils.space_ops.quaternion_mult manim.utils.space_ops.regular_vertices
#: manim.utils.space_ops.rotate_vector manim.utils.space_ops.rotation_about_z
#: manim.utils.space_ops.rotation_matrix
#: manim.utils.space_ops.rotation_matrix_from_quaternion
#: manim.utils.space_ops.rotation_matrix_transpose
#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion
#: manim.utils.space_ops.shoelace manim.utils.space_ops.shoelace_direction
#: manim.utils.space_ops.thick_diagonal manim.utils.space_ops.z_to_vector of
msgid "Parameters"
msgstr ""

#: manim.utils.space_ops.R3_to_complex
#: manim.utils.space_ops.angle_axis_from_quaternion
#: manim.utils.space_ops.angle_between_vectors
#: manim.utils.space_ops.angle_of_vector manim.utils.space_ops.center_of_mass
#: manim.utils.space_ops.compass_directions manim.utils.space_ops.complex_to_R3
#: manim.utils.space_ops.earclip_triangulation
#: manim.utils.space_ops.find_intersection
#: manim.utils.space_ops.get_unit_normal
#: manim.utils.space_ops.get_winding_number
#: manim.utils.space_ops.line_intersection manim.utils.space_ops.midpoint
#: manim.utils.space_ops.norm_squared manim.utils.space_ops.normalize
#: manim.utils.space_ops.normalize_along_axis
#: manim.utils.space_ops.perpendicular_bisector
#: manim.utils.space_ops.project_along_vector
#: manim.utils.space_ops.quaternion_conjugate
#: manim.utils.space_ops.quaternion_from_angle_axis
#: manim.utils.space_ops.quaternion_mult manim.utils.space_ops.regular_vertices
#: manim.utils.space_ops.rotate_vector manim.utils.space_ops.rotation_about_z
#: manim.utils.space_ops.rotation_matrix
#: manim.utils.space_ops.rotation_matrix_from_quaternion
#: manim.utils.space_ops.rotation_matrix_transpose
#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion
#: manim.utils.space_ops.shoelace manim.utils.space_ops.shoelace_direction
#: manim.utils.space_ops.thick_diagonal manim.utils.space_ops.z_to_vector of
msgid "Return type"
msgstr ""

#: manim.utils.space_ops.angle_axis_from_quaternion:1 of
msgid "Gets angle and axis from a quaternion."
msgstr ""

#: manim.utils.space_ops.angle_axis_from_quaternion:3 of
msgid "The quaternion from which we get the angle and axis."
msgstr ""

#: manim.utils.space_ops.angle_axis_from_quaternion
#: manim.utils.space_ops.angle_between_vectors
#: manim.utils.space_ops.angle_of_vector manim.utils.space_ops.center_of_mass
#: manim.utils.space_ops.compass_directions
#: manim.utils.space_ops.earclip_triangulation
#: manim.utils.space_ops.get_unit_normal
#: manim.utils.space_ops.line_intersection manim.utils.space_ops.midpoint
#: manim.utils.space_ops.normalize_along_axis
#: manim.utils.space_ops.perpendicular_bisector
#: manim.utils.space_ops.project_along_vector
#: manim.utils.space_ops.quaternion_conjugate
#: manim.utils.space_ops.quaternion_from_angle_axis
#: manim.utils.space_ops.quaternion_mult manim.utils.space_ops.regular_vertices
#: manim.utils.space_ops.rotate_vector manim.utils.space_ops.rotation_about_z
#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion
#: manim.utils.space_ops.shoelace manim.utils.space_ops.shoelace_direction of
msgid "Returns"
msgstr ""

#: manim.utils.space_ops.angle_axis_from_quaternion:5 of
msgid "Gives the angle and axis"
msgstr ""

#: manim.utils.space_ops.angle_between_vectors:1 of
msgid ""
"Returns the angle between two vectors. This angle will always be between "
"0 and pi"
msgstr ""

#: manim.utils.space_ops.angle_between_vectors:4
#: manim.utils.space_ops.get_unit_normal:3 of
msgid "The first vector."
msgstr ""

#: manim.utils.space_ops.angle_between_vectors:5 of
msgid "The second vector."
msgstr ""

#: manim.utils.space_ops.angle_between_vectors:7 of
msgid "The angle between the vectors."
msgstr ""

#: manim.utils.space_ops.angle_of_vector:1 of
msgid "Returns polar coordinate theta when vector is projected on xy plane."
msgstr ""

#: manim.utils.space_ops.angle_of_vector:3 of
msgid "The vector to find the angle for."
msgstr ""

#: manim.utils.space_ops.angle_of_vector:5 of
msgid "The angle of the vector projected."
msgstr ""

#: manim.utils.space_ops.center_of_mass:1 of
msgid "Gets the center of mass of the points in space."
msgstr ""

#: manim.utils.space_ops.center_of_mass:3 of
msgid "The points to find the center of mass from."
msgstr ""

#: manim.utils.space_ops.center_of_mass:5 of
msgid "The center of mass of the points."
msgstr ""

#: manim.utils.space_ops.compass_directions:1 of
msgid "Finds the cardinal directions using tau."
msgstr ""

#: manim.utils.space_ops.compass_directions:3 of
msgid "The amount to be rotated, by default 4"
msgstr ""

#: manim.utils.space_ops.compass_directions:4 of
msgid "The direction for the angle to start with, by default RIGHT"
msgstr ""

#: manim.utils.space_ops.compass_directions:6 of
msgid "The angle which has been rotated."
msgstr ""

#: manim.utils.space_ops.earclip_triangulation:1 of
msgid ""
"Returns a list of indices giving a triangulation of a polygon, "
"potentially with holes."
msgstr ""

#: manim.utils.space_ops.earclip_triangulation:4 of
msgid "verts is a numpy array of points."
msgstr ""

#: manim.utils.space_ops.earclip_triangulation:5 of
msgid "ring_ends is a list of indices indicating where"
msgstr ""

#: manim.utils.space_ops.earclip_triangulation:8 of
msgid "A list of indices giving a triangulation of a polygon."
msgstr ""

#: manim.utils.space_ops.find_intersection:1 of
msgid ""
"Return the intersection of a line passing through p0 in direction v0 with"
" one passing through p1 in direction v1.  (Or array of intersections from"
" arrays of such points/directions). For 3d values, it returns the point "
"on the ray p0 + v0 * t closest to the ray p1 + v1 * t"
msgstr ""

#: manim.utils.space_ops.get_unit_normal:1 of
msgid "Gets the unit normal of the vectors."
msgstr ""

#: manim.utils.space_ops.get_unit_normal:4 of
msgid "The second vector"
msgstr ""

#: manim.utils.space_ops.get_unit_normal:5 of
msgid "[description], by default 1e-6"
msgstr ""

#: manim.utils.space_ops.get_unit_normal:7 of
msgid "The normal of the two vectors."
msgstr ""

#: manim.utils.space_ops.line_intersection:1 of
msgid ""
"Returns intersection point of two lines, each defined with a pair of "
"vectors determining the end points."
msgstr ""

#: manim.utils.space_ops.line_intersection:4 of
msgid "The first line."
msgstr ""

#: manim.utils.space_ops.line_intersection:5 of
msgid "The second line."
msgstr ""

#: manim.utils.space_ops.line_intersection:7 of
msgid "The intersection points of the two lines which are intersecting."
msgstr ""

#: manim.utils.space_ops.line_intersection manim.utils.space_ops.rotate_vector
#: of
msgid "Raises"
msgstr ""

#: manim.utils.space_ops.line_intersection:10 of
msgid "Error is produced if the two lines don't intersect with each other"
msgstr ""

#: manim.utils.space_ops.midpoint:1 of
msgid "Gets the midpoint of two points."
msgstr ""

#: manim.utils.space_ops.midpoint:3 of
msgid "The first point."
msgstr ""

#: manim.utils.space_ops.midpoint:4 of
msgid "The second point."
msgstr ""

#: manim.utils.space_ops.midpoint:6 of
msgid "The midpoint of the points"
msgstr ""

#: manim.utils.space_ops.normalize_along_axis:1 of
msgid "Normalizes an array with the provided axis."
msgstr ""

#: manim.utils.space_ops.normalize_along_axis:3 of
msgid "The array which has to be normalized."
msgstr ""

#: manim.utils.space_ops.normalize_along_axis:4 of
msgid "The axis to be normalized to."
msgstr ""

#: manim.utils.space_ops.normalize_along_axis:6 of
msgid "Array which has been normalized according to the axis."
msgstr ""

#: manim.utils.space_ops.perpendicular_bisector:1 of
msgid ""
"Returns a list of two points that correspond to the ends of the "
"perpendicular bisector of the two points given."
msgstr ""

#: manim.utils.space_ops.perpendicular_bisector:5 of
msgid "a list of two numpy array points (corresponding to the ends of a line)."
msgstr ""

#: manim.utils.space_ops.perpendicular_bisector:7 of
msgid ""
"the vector perpendicular to both the line given and the perpendicular "
"bisector."
msgstr ""

#: manim.utils.space_ops.perpendicular_bisector:10 of
msgid ""
"A list of two numpy array points that correspond to the ends of the "
"perpendicular bisector"
msgstr ""

#: manim.utils.space_ops.project_along_vector:1 of
msgid "Projects a vector along a point."
msgstr ""

#: manim.utils.space_ops.project_along_vector:3 of
msgid "The point to be project from."
msgstr ""

#: manim.utils.space_ops.project_along_vector:4 of
msgid "The vector which has to projected."
msgstr ""

#: manim.utils.space_ops.project_along_vector:6 of
msgid "A dot product of the point and vector."
msgstr ""

#: manim.utils.space_ops.quaternion_conjugate:1 of
msgid "Used for finding the conjugate of the quaternion"
msgstr ""

#: manim.utils.space_ops.quaternion_conjugate:3 of
msgid "The quaternion for which you want to find the conjugate for."
msgstr ""

#: manim.utils.space_ops.quaternion_conjugate:5 of
msgid "The conjugate of the quaternion."
msgstr ""

#: manim.utils.space_ops.quaternion_from_angle_axis:1 of
msgid ""
"Gets a quaternion from an angle and an axis. For more information, check "
"`this Wikipedia page "
"<https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles>`__."
msgstr ""

#: manim.utils.space_ops.quaternion_from_angle_axis:5 of
msgid "The angle for the quaternion."
msgstr ""

#: manim.utils.space_ops.quaternion_from_angle_axis:6 of
msgid "The axis for the quaternion"
msgstr ""

#: manim.utils.space_ops.quaternion_from_angle_axis:7 of
msgid "Checks whether the axis is normalized, by default False"
msgstr ""

#: manim.utils.space_ops.quaternion_from_angle_axis:10 of
msgid "Gives back a quaternion from the angle and axis"
msgstr ""

#: manim.utils.space_ops.quaternion_mult:1 of
msgid ""
"Gets the Hamilton product of the quaternions provided. For more "
"information, check `this Wikipedia page "
"<https://en.wikipedia.org/wiki/Quaternion>`__."
msgstr ""

#: manim.utils.space_ops.quaternion_mult:5 of
msgid "Returns a list of product of two quaternions."
msgstr ""

#: manim.utils.space_ops.regular_vertices:1 of
msgid ""
"Generates regularly spaced vertices around a circle centered at the "
"origin."
msgstr ""

#: manim.utils.space_ops.regular_vertices:3 of
msgid "The number of vertices"
msgstr ""

#: manim.utils.space_ops.regular_vertices:4 of
msgid "The radius of the circle that the vertices are placed on."
msgstr ""

#: manim.utils.space_ops.regular_vertices:5 of
msgid ""
"The angle the vertices start at.  If unspecified, for even ``n`` values, "
"``0`` will be used. For odd ``n`` values, 90 degrees is used."
msgstr ""

#: manim.utils.space_ops.regular_vertices:5 of
msgid "The angle the vertices start at."
msgstr ""

#: manim.utils.space_ops.regular_vertices:7 of
msgid ""
"If unspecified, for even ``n`` values, ``0`` will be used. For odd ``n`` "
"values, 90 degrees is used."
msgstr ""

#: manim.utils.space_ops.regular_vertices:10 of
msgid ""
"* **vertices** (:class:`numpy.ndarray`) -- The regularly spaced vertices."
" * **start_angle** (:class:`float`) -- The angle the vertices start at."
msgstr ""

#: manim.utils.space_ops.regular_vertices:10 of
msgid "**vertices** (:class:`numpy.ndarray`) -- The regularly spaced vertices."
msgstr ""

#: manim.utils.space_ops.regular_vertices:11 of
msgid "**start_angle** (:class:`float`) -- The angle the vertices start at."
msgstr ""

#: manim.utils.space_ops.rotate_vector:1 of
msgid "Function for rotating a vector."
msgstr ""

#: manim.utils.space_ops.rotate_vector:3 of
msgid "The vector to be rotated."
msgstr ""

#: manim.utils.space_ops.rotate_vector:4 of
msgid "The angle to be rotated by."
msgstr ""

#: manim.utils.space_ops.rotate_vector:5 of
msgid "The axis to be rotated, by default OUT"
msgstr ""

#: manim.utils.space_ops.rotate_vector:7 of
msgid "The rotated vector with provided angle and axis."
msgstr ""

#: manim.utils.space_ops.rotate_vector:10 of
msgid "If vector is not of dimension 2 or 3."
msgstr ""

#: manim.utils.space_ops.rotation_about_z:1 of
msgid "Returns a rotation matrix for a given angle."
msgstr ""

#: manim.utils.space_ops.rotation_about_z:3 of
msgid "Angle for the rotation matrix."
msgstr ""

#: manim.utils.space_ops.rotation_about_z:6 of
msgid "Gives back the rotated matrix."
msgstr ""

#: manim.utils.space_ops.rotation_matrix:1 of
msgid "Rotation in R^3 about a specified axis of rotation."
msgstr ""

#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion:1 of
msgid ""
"Converts the quaternion, quat, to an equivalent rotation matrix "
"representation. For more information, check `this page "
"<https://in.mathworks.com/help/driving/ref/quaternion.rotmat.html>`_."
msgstr ""

#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion:5 of
msgid "The quaternion which is to be converted."
msgstr ""

#: manim.utils.space_ops.rotation_matrix_transpose_from_quaternion:7 of
msgid ""
"Gives back the Rotation matrix representation, returned as a 3-by-3 "
"matrix or 3-by-3-by-N multidimensional array."
msgstr ""

#: manim.utils.space_ops.shoelace:1 of
msgid "2D implementation of the shoelace formula."
msgstr ""

#: manim.utils.space_ops.shoelace:3 of
msgid "Returns signed area."
msgstr ""

#: manim.utils.space_ops.shoelace:4 of
msgid ":class:`float`"
msgstr ""

#: manim.utils.space_ops.shoelace_direction:1 of
msgid ""
"Uses the area determined by the shoelace method to determine whether the "
"input set of points is directed clockwise or counterclockwise."
msgstr ""

#: manim.utils.space_ops.shoelace_direction:4 of
msgid "Either ``\"CW\"`` or ``\"CCW\"``."
msgstr ""

#: manim.utils.space_ops.shoelace_direction:5 of
msgid ":class:`str`"
msgstr ""

#: manim.utils.space_ops.z_to_vector:1 of
msgid ""
"Returns some matrix in SO(3) which takes the z-axis to the (normalized) "
"vector provided as an argument"
msgstr ""


